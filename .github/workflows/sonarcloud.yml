# SonarCloud Scan for PHP/Laravel
# Provides in-depth static analysis for code quality and security, with framework-aware rules.
# This updated version automatically creates GitHub Issues for new bugs and vulnerabilities
# when the Quality Gate fails.

name: SonarCloud PHP Analysis

permissions:
  contents: read
  pull-requests: write
  issues: write

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop
  workflow_dispatch:

jobs:
  sonar-scan:
    name: Analyze PHP Code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v2
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          args: >
            -Dsonar.projectKey=umaarov_goat-dev
            -Dsonar.organization=umaarov
            -Dsonar.sources=app,config,routes
            -Dsonar.tests=tests
            -Dsonar.exclusions=**/vendor/**,**/public/**,**/database/**

  create-github-issues:
    name: Create GitHub Issues for Findings
    runs-on: ubuntu-latest
    needs: sonar-scan
    if: failure()
    steps:
      - name: Create issues for new bugs and vulnerabilities
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_PROJECT_KEY: 'umaarov_goat-dev'
          SONAR_ORGANIZATION_KEY: 'umaarov'
        run: |
          echo "Waiting 30 seconds for SonarCloud analysis to be processed..."
          sleep 30

          API_URL="https://sonarcloud.io/api/issues/search?componentKeys=${SONAR_PROJECT_KEY}&s=FILE_LINE&resolved=false&ps=100&branch=${{ github.ref_name }}&types=BUG,VULNERABILITY"

          issues=$(curl -s -u "${SONAR_TOKEN}:" "${API_URL}")
          issue_count=$(echo "$issues" | jq '.total')

          if [ "$issue_count" -eq 0 ]; then
            echo "No new bugs or vulnerabilities found to create issues for."
            exit 0
          fi

          echo "Found $issue_count issues. Creating corresponding GitHub Issues..."

          echo "$issues" | jq -c '.issues[]' | while read -r issue; do
            title=$(echo "$issue" | jq -r '.message')
            component=$(echo "$issue" | jq -r '.component')
            line=$(echo "$issue" | jq -r '.line')
            issue_key=$(echo "$issue" | jq -r '.key')

            sonar_url="https://sonarcloud.io/project/issues?id=${SONAR_PROJECT_KEY}&issues=${issue_key}&open=${issue_key}"

            body="**ðŸš¨ SonarCloud Finding**

            - **File:** \`$component\`
            - **Line:** $line
            - **Full Report:** [View on SonarCloud]($sonar_url)"

            gh issue create --title "SonarCloud: $title" --body "$body" --label "bug,sonarcloud,autogenerated"
          done
